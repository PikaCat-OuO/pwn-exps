
level3_x64：     文件格式 elf64-x86-64


Disassembly of section .interp:

0000000000400200 <.interp>:
  400200:	2f                   	(bad)  
  400201:	6c                   	ins    BYTE PTR es:[rdi],dx
  400202:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400209:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  40020e:	78 2d                	js     40023d <_init-0x243>
  400210:	78 38                	js     40024a <_init-0x236>
  400212:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400218:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400219:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

000000000040021c <.note.ABI-tag>:
  40021c:	04 00                	add    al,0x0
  40021e:	00 00                	add    BYTE PTR [rax],al
  400220:	10 00                	adc    BYTE PTR [rax],al
  400222:	00 00                	add    BYTE PTR [rax],al
  400224:	01 00                	add    DWORD PTR [rax],eax
  400226:	00 00                	add    BYTE PTR [rax],al
  400228:	47                   	rex.RXB
  400229:	4e 55                	rex.WRX push rbp
  40022b:	00 00                	add    BYTE PTR [rax],al
  40022d:	00 00                	add    BYTE PTR [rax],al
  40022f:	00 02                	add    BYTE PTR [rdx],al
  400231:	00 00                	add    BYTE PTR [rax],al
  400233:	00 06                	add    BYTE PTR [rsi],al
  400235:	00 00                	add    BYTE PTR [rax],al
  400237:	00 20                	add    BYTE PTR [rax],ah
  400239:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

000000000040023c <.note.gnu.build-id>:
  40023c:	04 00                	add    al,0x0
  40023e:	00 00                	add    BYTE PTR [rax],al
  400240:	14 00                	adc    al,0x0
  400242:	00 00                	add    BYTE PTR [rax],al
  400244:	03 00                	add    eax,DWORD PTR [rax]
  400246:	00 00                	add    BYTE PTR [rax],al
  400248:	47                   	rex.RXB
  400249:	4e 55                	rex.WRX push rbp
  40024b:	00 f0                	add    al,dh
  40024d:	1f                   	(bad)  
  40024e:	8f                   	(bad)  
  40024f:	d4                   	(bad)  
  400250:	10 61 f9             	adc    BYTE PTR [rcx-0x7],ah
  400253:	da fb                	(bad)  
  400255:	93                   	xchg   ebx,eax
  400256:	99                   	cdq    
  400257:	e7 23                	out    0x23,eax
  400259:	eb 52                	jmp    4002ad <_init-0x1d3>
  40025b:	d2 49 a9             	ror    BYTE PTR [rcx-0x57],cl
  40025e:	b3 4d                	mov    bl,0x4d

Disassembly of section .gnu.hash:

0000000000400260 <.gnu.hash>:
  400260:	01 00                	add    DWORD PTR [rax],eax
  400262:	00 00                	add    BYTE PTR [rax],al
  400264:	01 00                	add    DWORD PTR [rax],eax
  400266:	00 00                	add    BYTE PTR [rax],al
  400268:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

0000000000400280 <.dynsym>:
	...
  400298:	0c 00                	or     al,0x0
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	20 00                	and    BYTE PTR [rax],al
	...
  4002ae:	00 00                	add    BYTE PTR [rax],al
  4002b0:	86 00                	xchg   BYTE PTR [rax],al
  4002b2:	00 00                	add    BYTE PTR [rax],al
  4002b4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002c6:	00 00                	add    BYTE PTR [rax],al
  4002c8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4002c9:	00 00                	add    BYTE PTR [rax],al
  4002cb:	00 12                	add    BYTE PTR [rdx],dl
	...
  4002dd:	00 00                	add    BYTE PTR [rax],al
  4002df:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
  4002e3:	00 12                	add    BYTE PTR [rdx],dl
	...
  4002f5:	00 00                	add    BYTE PTR [rax],al
  4002f7:	00 28                	add    BYTE PTR [rax],ch
  4002f9:	00 00                	add    BYTE PTR [rax],al
  4002fb:	00 20                	add    BYTE PTR [rax],ah
	...
  40030d:	00 00                	add    BYTE PTR [rax],al
  40030f:	00 37                	add    BYTE PTR [rdi],dh
  400311:	00 00                	add    BYTE PTR [rax],al
  400313:	00 20                	add    BYTE PTR [rax],ah
	...
  400325:	00 00                	add    BYTE PTR [rax],al
  400327:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
  40032a:	00 00                	add    BYTE PTR [rax],al
  40032c:	20 00                	and    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000400340 <.dynstr>:
  400340:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  400344:	64 6c                	fs ins BYTE PTR es:[rdi],dx
  400346:	2e 73 6f             	cs jae 4003b8 <_init-0xc8>
  400349:	2e 32 00             	xor    al,BYTE PTR cs:[rax]
  40034c:	5f                   	pop    rdi
  40034d:	49 54                	rex.WB push r12
  40034f:	4d 5f                	rex.WRB pop r15
  400351:	64 65 72 65          	fs gs jb 4003ba <_init-0xc6>
  400355:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
  40035c:	4d 
  40035d:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
  40035f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400360:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400361:	65 54                	gs push rsp
  400363:	61                   	(bad)  
  400364:	62                   	(bad)  
  400365:	6c                   	ins    BYTE PTR es:[rdi],dx
  400366:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
  40036a:	67 6d                	ins    DWORD PTR es:[edi],dx
  40036c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40036d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40036e:	5f                   	pop    rdi
  40036f:	73 74                	jae    4003e5 <_init-0x9b>
  400371:	61                   	(bad)  
  400372:	72 74                	jb     4003e8 <_init-0x98>
  400374:	5f                   	pop    rdi
  400375:	5f                   	pop    rdi
  400376:	00 5f 4a             	add    BYTE PTR [rdi+0x4a],bl
  400379:	76 5f                	jbe    4003da <_init-0xa6>
  40037b:	52                   	push   rdx
  40037c:	65 67 69 73 74 65 72 	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
  400383:	43 6c 
  400385:	61                   	(bad)  
  400386:	73 73                	jae    4003fb <_init-0x85>
  400388:	65 73 00             	gs jae 40038b <_init-0xf5>
  40038b:	5f                   	pop    rdi
  40038c:	49 54                	rex.WB push r12
  40038e:	4d 5f                	rex.WRB pop r15
  400390:	72 65                	jb     4003f7 <_init-0x89>
  400392:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
  400399:	4d 
  40039a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
  40039c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40039d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40039e:	65 54                	gs push rsp
  4003a0:	61                   	(bad)  
  4003a1:	62                   	(bad)  
  4003a2:	6c                   	ins    BYTE PTR es:[rdi],dx
  4003a3:	65 00 6c 69 62       	add    BYTE PTR gs:[rcx+rbp*2+0x62],ch
  4003a8:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  4003aa:	73 6f                	jae    40041b <_init-0x65>
  4003ac:	2e 36 00 72 65       	cs add BYTE PTR ss:[rdx+0x65],dh
  4003b1:	61                   	(bad)  
  4003b2:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
  4003b6:	6c                   	ins    BYTE PTR es:[rdi],dx
  4003b7:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  4003be:	72 74                	jb     400434 <_init-0x4c>
  4003c0:	5f                   	pop    rdi
  4003c1:	6d                   	ins    DWORD PTR es:[rdi],dx
  4003c2:	61                   	(bad)  
  4003c3:	69 6e 00 77 72 69 74 	imul   ebp,DWORD PTR [rsi+0x0],0x74697277
  4003ca:	65 00 47 4c          	add    BYTE PTR gs:[rdi+0x4c],al
  4003ce:	49                   	rex.WB
  4003cf:	42                   	rex.X
  4003d0:	43 5f                	rex.XB pop r15
  4003d2:	32 2e                	xor    ch,BYTE PTR [rsi]
  4003d4:	32 2e                	xor    ch,BYTE PTR [rsi]
  4003d6:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000004003d8 <.gnu.version>:
  4003d8:	00 00                	add    BYTE PTR [rax],al
  4003da:	00 00                	add    BYTE PTR [rax],al
  4003dc:	02 00                	add    al,BYTE PTR [rax]
  4003de:	02 00                	add    al,BYTE PTR [rax]
  4003e0:	02 00                	add    al,BYTE PTR [rax]
  4003e2:	00 00                	add    BYTE PTR [rax],al
  4003e4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.version_r:

00000000004003e8 <.gnu.version_r>:
  4003e8:	01 00                	add    DWORD PTR [rax],eax
  4003ea:	01 00                	add    DWORD PTR [rax],eax
  4003ec:	65 00 00             	add    BYTE PTR gs:[rax],al
  4003ef:	00 10                	add    BYTE PTR [rax],dl
  4003f1:	00 00                	add    BYTE PTR [rax],al
  4003f3:	00 00                	add    BYTE PTR [rax],al
  4003f5:	00 00                	add    BYTE PTR [rax],al
  4003f7:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
  4003fa:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  400400:	8c 00                	mov    WORD PTR [rax],es
  400402:	00 00                	add    BYTE PTR [rax],al
  400404:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000400408 <.rela.dyn>:
  400408:	38 0a                	cmp    BYTE PTR [rdx],cl
  40040a:	60                   	(bad)  
  40040b:	00 00                	add    BYTE PTR [rax],al
  40040d:	00 00                	add    BYTE PTR [rax],al
  40040f:	00 06                	add    BYTE PTR [rsi],al
  400411:	00 00                	add    BYTE PTR [rax],al
  400413:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 400419 <_init-0x67>
  400419:	00 00                	add    BYTE PTR [rax],al
  40041b:	00 00                	add    BYTE PTR [rax],al
  40041d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.plt:

0000000000400420 <.rela.plt>:
  400420:	58                   	pop    rax
  400421:	0a 60 00             	or     ah,BYTE PTR [rax+0x0]
  400424:	00 00                	add    BYTE PTR [rax],al
  400426:	00 00                	add    BYTE PTR [rax],al
  400428:	07                   	(bad)  
  400429:	00 00                	add    BYTE PTR [rax],al
  40042b:	00 02                	add    BYTE PTR [rdx],al
	...
  400435:	00 00                	add    BYTE PTR [rax],al
  400437:	00 60 0a             	add    BYTE PTR [rax+0xa],ah
  40043a:	60                   	(bad)  
  40043b:	00 00                	add    BYTE PTR [rax],al
  40043d:	00 00                	add    BYTE PTR [rax],al
  40043f:	00 07                	add    BYTE PTR [rdi],al
  400441:	00 00                	add    BYTE PTR [rax],al
  400443:	00 03                	add    BYTE PTR [rbx],al
	...
  40044d:	00 00                	add    BYTE PTR [rax],al
  40044f:	00 68 0a             	add    BYTE PTR [rax+0xa],ch
  400452:	60                   	(bad)  
  400453:	00 00                	add    BYTE PTR [rax],al
  400455:	00 00                	add    BYTE PTR [rax],al
  400457:	00 07                	add    BYTE PTR [rdi],al
  400459:	00 00                	add    BYTE PTR [rax],al
  40045b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
  400466:	00 00                	add    BYTE PTR [rax],al
  400468:	70 0a                	jo     400474 <_init-0xc>
  40046a:	60                   	(bad)  
  40046b:	00 00                	add    BYTE PTR [rax],al
  40046d:	00 00                	add    BYTE PTR [rax],al
  40046f:	00 07                	add    BYTE PTR [rdi],al
  400471:	00 00                	add    BYTE PTR [rax],al
  400473:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 400479 <_init-0x7>
  400479:	00 00                	add    BYTE PTR [rax],al
  40047b:	00 00                	add    BYTE PTR [rax],al
  40047d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init:

0000000000400480 <_init>:
  400480:	48 83 ec 08          	sub    rsp,0x8
  400484:	48 8b 05 ad 05 20 00 	mov    rax,QWORD PTR [rip+0x2005ad]        # 600a38 <__gmon_start__>
  40048b:	48 85 c0             	test   rax,rax
  40048e:	74 05                	je     400495 <_init+0x15>
  400490:	e8 4b 00 00 00       	call   4004e0 <__gmon_start__@plt>
  400495:	48 83 c4 08          	add    rsp,0x8
  400499:	c3                   	ret    

Disassembly of section .plt:

00000000004004a0 <.plt>:
  4004a0:	ff 35 a2 05 20 00    	push   QWORD PTR [rip+0x2005a2]        # 600a48 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004a6:	ff 25 a4 05 20 00    	jmp    QWORD PTR [rip+0x2005a4]        # 600a50 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004004b0 <write@plt>:
  4004b0:	ff 25 a2 05 20 00    	jmp    QWORD PTR [rip+0x2005a2]        # 600a58 <write@GLIBC_2.2.5>
  4004b6:	68 00 00 00 00       	push   0x0
  4004bb:	e9 e0 ff ff ff       	jmp    4004a0 <.plt>

00000000004004c0 <read@plt>:
  4004c0:	ff 25 9a 05 20 00    	jmp    QWORD PTR [rip+0x20059a]        # 600a60 <read@GLIBC_2.2.5>
  4004c6:	68 01 00 00 00       	push   0x1
  4004cb:	e9 d0 ff ff ff       	jmp    4004a0 <.plt>

00000000004004d0 <__libc_start_main@plt>:
  4004d0:	ff 25 92 05 20 00    	jmp    QWORD PTR [rip+0x200592]        # 600a68 <__libc_start_main@GLIBC_2.2.5>
  4004d6:	68 02 00 00 00       	push   0x2
  4004db:	e9 c0 ff ff ff       	jmp    4004a0 <.plt>

00000000004004e0 <__gmon_start__@plt>:
  4004e0:	ff 25 8a 05 20 00    	jmp    QWORD PTR [rip+0x20058a]        # 600a70 <__gmon_start__>
  4004e6:	68 03 00 00 00       	push   0x3
  4004eb:	e9 b0 ff ff ff       	jmp    4004a0 <.plt>

Disassembly of section .text:

00000000004004f0 <_start>:
  4004f0:	31 ed                	xor    ebp,ebp
  4004f2:	49 89 d1             	mov    r9,rdx
  4004f5:	5e                   	pop    rsi
  4004f6:	48 89 e2             	mov    rdx,rsp
  4004f9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  4004fd:	50                   	push   rax
  4004fe:	54                   	push   rsp
  4004ff:	49 c7 c0 c0 06 40 00 	mov    r8,0x4006c0
  400506:	48 c7 c1 50 06 40 00 	mov    rcx,0x400650
  40050d:	48 c7 c7 1a 06 40 00 	mov    rdi,0x40061a
  400514:	e8 b7 ff ff ff       	call   4004d0 <__libc_start_main@plt>
  400519:	f4                   	hlt    
  40051a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400520 <deregister_tm_clones>:
  400520:	b8 8f 0a 60 00       	mov    eax,0x600a8f
  400525:	55                   	push   rbp
  400526:	48 2d 88 0a 60 00    	sub    rax,0x600a88
  40052c:	48 83 f8 0e          	cmp    rax,0xe
  400530:	48 89 e5             	mov    rbp,rsp
  400533:	76 1b                	jbe    400550 <deregister_tm_clones+0x30>
  400535:	b8 00 00 00 00       	mov    eax,0x0
  40053a:	48 85 c0             	test   rax,rax
  40053d:	74 11                	je     400550 <deregister_tm_clones+0x30>
  40053f:	5d                   	pop    rbp
  400540:	bf 88 0a 60 00       	mov    edi,0x600a88
  400545:	ff e0                	jmp    rax
  400547:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40054e:	00 00 
  400550:	5d                   	pop    rbp
  400551:	c3                   	ret    
  400552:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nop WORD PTR cs:[rax+rax*1+0x0]
  400559:	1f 84 00 00 00 00 00 

0000000000400560 <register_tm_clones>:
  400560:	be 88 0a 60 00       	mov    esi,0x600a88
  400565:	55                   	push   rbp
  400566:	48 81 ee 88 0a 60 00 	sub    rsi,0x600a88
  40056d:	48 c1 fe 03          	sar    rsi,0x3
  400571:	48 89 e5             	mov    rbp,rsp
  400574:	48 89 f0             	mov    rax,rsi
  400577:	48 c1 e8 3f          	shr    rax,0x3f
  40057b:	48 01 c6             	add    rsi,rax
  40057e:	48 d1 fe             	sar    rsi,1
  400581:	74 15                	je     400598 <register_tm_clones+0x38>
  400583:	b8 00 00 00 00       	mov    eax,0x0
  400588:	48 85 c0             	test   rax,rax
  40058b:	74 0b                	je     400598 <register_tm_clones+0x38>
  40058d:	5d                   	pop    rbp
  40058e:	bf 88 0a 60 00       	mov    edi,0x600a88
  400593:	ff e0                	jmp    rax
  400595:	0f 1f 00             	nop    DWORD PTR [rax]
  400598:	5d                   	pop    rbp
  400599:	c3                   	ret    
  40059a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000004005a0 <__do_global_dtors_aux>:
  4005a0:	80 3d e1 04 20 00 00 	cmp    BYTE PTR [rip+0x2004e1],0x0        # 600a88 <__TMC_END__>
  4005a7:	75 11                	jne    4005ba <__do_global_dtors_aux+0x1a>
  4005a9:	55                   	push   rbp
  4005aa:	48 89 e5             	mov    rbp,rsp
  4005ad:	e8 6e ff ff ff       	call   400520 <deregister_tm_clones>
  4005b2:	5d                   	pop    rbp
  4005b3:	c6 05 ce 04 20 00 01 	mov    BYTE PTR [rip+0x2004ce],0x1        # 600a88 <__TMC_END__>
  4005ba:	f3 c3                	repz ret 
  4005bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004005c0 <frame_dummy>:
  4005c0:	bf 50 08 60 00       	mov    edi,0x600850
  4005c5:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  4005c9:	75 05                	jne    4005d0 <frame_dummy+0x10>
  4005cb:	eb 93                	jmp    400560 <register_tm_clones>
  4005cd:	0f 1f 00             	nop    DWORD PTR [rax]
  4005d0:	b8 00 00 00 00       	mov    eax,0x0
  4005d5:	48 85 c0             	test   rax,rax
  4005d8:	74 f1                	je     4005cb <frame_dummy+0xb>
  4005da:	55                   	push   rbp
  4005db:	48 89 e5             	mov    rbp,rsp
  4005de:	ff d0                	call   rax
  4005e0:	5d                   	pop    rbp
  4005e1:	e9 7a ff ff ff       	jmp    400560 <register_tm_clones>

00000000004005e6 <vulnerable_function>:
  4005e6:	55                   	push   rbp
  4005e7:	48 89 e5             	mov    rbp,rsp
  4005ea:	48 83 c4 80          	add    rsp,0xffffffffffffff80
  4005ee:	ba 07 00 00 00       	mov    edx,0x7
  4005f3:	be d4 06 40 00       	mov    esi,0x4006d4
  4005f8:	bf 01 00 00 00       	mov    edi,0x1
  4005fd:	e8 ae fe ff ff       	call   4004b0 <write@plt>
  400602:	48 8d 45 80          	lea    rax,[rbp-0x80]
  400606:	ba 00 02 00 00       	mov    edx,0x200
  40060b:	48 89 c6             	mov    rsi,rax
  40060e:	bf 00 00 00 00       	mov    edi,0x0
  400613:	e8 a8 fe ff ff       	call   4004c0 <read@plt>
  400618:	c9                   	leave  
  400619:	c3                   	ret    

000000000040061a <main>:
  40061a:	55                   	push   rbp
  40061b:	48 89 e5             	mov    rbp,rsp
  40061e:	48 83 ec 10          	sub    rsp,0x10
  400622:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  400625:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  400629:	b8 00 00 00 00       	mov    eax,0x0
  40062e:	e8 b3 ff ff ff       	call   4005e6 <vulnerable_function>
  400633:	ba 0e 00 00 00       	mov    edx,0xe
  400638:	be dc 06 40 00       	mov    esi,0x4006dc
  40063d:	bf 01 00 00 00       	mov    edi,0x1
  400642:	e8 69 fe ff ff       	call   4004b0 <write@plt>
  400647:	c9                   	leave  
  400648:	c3                   	ret    
  400649:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000400650 <__libc_csu_init>:
  400650:	41 57                	push   r15
  400652:	41 89 ff             	mov    r15d,edi
  400655:	41 56                	push   r14
  400657:	49 89 f6             	mov    r14,rsi
  40065a:	41 55                	push   r13
  40065c:	49 89 d5             	mov    r13,rdx
  40065f:	41 54                	push   r12
  400661:	4c 8d 25 d8 01 20 00 	lea    r12,[rip+0x2001d8]        # 600840 <__frame_dummy_init_array_entry>
  400668:	55                   	push   rbp
  400669:	48 8d 2d d8 01 20 00 	lea    rbp,[rip+0x2001d8]        # 600848 <__do_global_dtors_aux_fini_array_entry>
  400670:	53                   	push   rbx
  400671:	4c 29 e5             	sub    rbp,r12
  400674:	31 db                	xor    ebx,ebx
  400676:	48 c1 fd 03          	sar    rbp,0x3
  40067a:	48 83 ec 08          	sub    rsp,0x8
  40067e:	e8 fd fd ff ff       	call   400480 <_init>
  400683:	48 85 ed             	test   rbp,rbp
  400686:	74 1e                	je     4006a6 <__libc_csu_init+0x56>
  400688:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40068f:	00 
  400690:	4c 89 ea             	mov    rdx,r13
  400693:	4c 89 f6             	mov    rsi,r14
  400696:	44 89 ff             	mov    edi,r15d
  400699:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40069d:	48 83 c3 01          	add    rbx,0x1
  4006a1:	48 39 eb             	cmp    rbx,rbp
  4006a4:	75 ea                	jne    400690 <__libc_csu_init+0x40>
  4006a6:	48 83 c4 08          	add    rsp,0x8
  4006aa:	5b                   	pop    rbx
  4006ab:	5d                   	pop    rbp
  4006ac:	41 5c                	pop    r12
  4006ae:	41 5d                	pop    r13
  4006b0:	41 5e                	pop    r14
  4006b2:	41 5f                	pop    r15
  4006b4:	c3                   	ret    
  4006b5:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4006bc:	00 00 00 00 

00000000004006c0 <__libc_csu_fini>:
  4006c0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000004006c4 <_fini>:
  4006c4:	48 83 ec 08          	sub    rsp,0x8
  4006c8:	48 83 c4 08          	add    rsp,0x8
  4006cc:	c3                   	ret    

Disassembly of section .rodata:

00000000004006d0 <_IO_stdin_used>:
  4006d0:	01 00                	add    DWORD PTR [rax],eax
  4006d2:	02 00                	add    al,BYTE PTR [rax]
  4006d4:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
  4006d6:	70 75                	jo     40074d <_IO_stdin_used+0x7d>
  4006d8:	74 3a                	je     400714 <_IO_stdin_used+0x44>
  4006da:	0a 00                	or     al,BYTE PTR [rax]
  4006dc:	48                   	rex.W
  4006dd:	65 6c                	gs ins BYTE PTR es:[rdi],dx
  4006df:	6c                   	ins    BYTE PTR es:[rdi],dx
  4006e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4006e1:	2c 20                	sub    al,0x20
  4006e3:	57                   	push   rdi
  4006e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4006e5:	72 6c                	jb     400753 <_IO_stdin_used+0x83>
  4006e7:	64 21 0a             	and    DWORD PTR fs:[rdx],ecx
	...

Disassembly of section .eh_frame_hdr:

00000000004006ec <.eh_frame_hdr>:
  4006ec:	01 1b                	add    DWORD PTR [rbx],ebx
  4006ee:	03 3b                	add    edi,DWORD PTR [rbx]
  4006f0:	38 00                	cmp    BYTE PTR [rax],al
  4006f2:	00 00                	add    BYTE PTR [rax],al
  4006f4:	06                   	(bad)  
  4006f5:	00 00                	add    BYTE PTR [rax],al
  4006f7:	00 b4 fd ff ff 84 00 	add    BYTE PTR [rbp+rdi*8+0x84ffff],dh
  4006fe:	00 00                	add    BYTE PTR [rax],al
  400700:	04 fe                	add    al,0xfe
  400702:	ff                   	(bad)  
  400703:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
  400707:	00 fa                	add    dl,bh
  400709:	fe                   	(bad)  
  40070a:	ff                   	(bad)  
  40070b:	ff ac 00 00 00 2e ff 	jmp    FWORD PTR [rax+rax*1-0xd20000]
  400712:	ff                   	(bad)  
  400713:	ff cc                	dec    esp
  400715:	00 00                	add    BYTE PTR [rax],al
  400717:	00 64 ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],ah
  40071b:	ff                   	(bad)  
  40071c:	ec                   	in     al,dx
  40071d:	00 00                	add    BYTE PTR [rax],al
  40071f:	00 d4                	add    ah,dl
  400721:	ff                   	(bad)  
  400722:	ff                   	(bad)  
  400723:	ff 34 01             	push   QWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

0000000000400728 <__FRAME_END__-0x110>:
  400728:	14 00                	adc    al,0x0
  40072a:	00 00                	add    BYTE PTR [rax],al
  40072c:	00 00                	add    BYTE PTR [rax],al
  40072e:	00 00                	add    BYTE PTR [rax],al
  400730:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400733:	00 01                	add    BYTE PTR [rcx],al
  400735:	78 10                	js     400747 <_IO_stdin_used+0x77>
  400737:	01 1b                	add    DWORD PTR [rbx],ebx
  400739:	0c 07                	or     al,0x7
  40073b:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  400741:	00 00                	add    BYTE PTR [rax],al
  400743:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400746:	00 00                	add    BYTE PTR [rax],al
  400748:	a8 fd                	test   al,0xfd
  40074a:	ff                   	(bad)  
  40074b:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  400755:	00 00                	add    BYTE PTR [rax],al
  400757:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  40075a:	00 00                	add    BYTE PTR [rax],al
  40075c:	00 00                	add    BYTE PTR [rax],al
  40075e:	00 00                	add    BYTE PTR [rax],al
  400760:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400763:	00 01                	add    BYTE PTR [rcx],al
  400765:	78 10                	js     400777 <_IO_stdin_used+0xa7>
  400767:	01 1b                	add    DWORD PTR [rbx],ebx
  400769:	0c 07                	or     al,0x7
  40076b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  400771:	00 00                	add    BYTE PTR [rax],al
  400773:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400776:	00 00                	add    BYTE PTR [rax],al
  400778:	28 fd                	sub    ch,bh
  40077a:	ff                   	(bad)  
  40077b:	ff 50 00             	call   QWORD PTR [rax+0x0]
  40077e:	00 00                	add    BYTE PTR [rax],al
  400780:	00 0e                	add    BYTE PTR [rsi],cl
  400782:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  400785:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400788:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  40078b:	80 00 3f             	add    BYTE PTR [rax],0x3f
  40078e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400790:	2a 33                	sub    dh,BYTE PTR [rbx]
  400792:	24 22                	and    al,0x22
  400794:	00 00                	add    BYTE PTR [rax],al
  400796:	00 00                	add    BYTE PTR [rax],al
  400798:	1c 00                	sbb    al,0x0
  40079a:	00 00                	add    BYTE PTR [rax],al
  40079c:	44 00 00             	add    BYTE PTR [rax],r8b
  40079f:	00 46 fe             	add    BYTE PTR [rsi-0x2],al
  4007a2:	ff                   	(bad)  
  4007a3:	ff 34 00             	push   QWORD PTR [rax+rax*1]
  4007a6:	00 00                	add    BYTE PTR [rax],al
  4007a8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4007ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4007b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4007b2:	0c 07                	or     al,0x7
  4007b4:	08 00                	or     BYTE PTR [rax],al
  4007b6:	00 00                	add    BYTE PTR [rax],al
  4007b8:	1c 00                	sbb    al,0x0
  4007ba:	00 00                	add    BYTE PTR [rax],al
  4007bc:	64 00 00             	add    BYTE PTR fs:[rax],al
  4007bf:	00 5a fe             	add    BYTE PTR [rdx-0x2],bl
  4007c2:	ff                   	(bad)  
  4007c3:	ff 2f                	jmp    FWORD PTR [rdi]
  4007c5:	00 00                	add    BYTE PTR [rax],al
  4007c7:	00 00                	add    BYTE PTR [rax],al
  4007c9:	41 0e                	rex.B (bad) 
  4007cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4007d1:	6a 0c                	push   0xc
  4007d3:	07                   	(bad)  
  4007d4:	08 00                	or     BYTE PTR [rax],al
  4007d6:	00 00                	add    BYTE PTR [rax],al
  4007d8:	44 00 00             	add    BYTE PTR [rax],r8b
  4007db:	00 84 00 00 00 70 fe 	add    BYTE PTR [rax+rax*1-0x1900000],al
  4007e2:	ff                   	(bad)  
  4007e3:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  4007e6:	00 00                	add    BYTE PTR [rax],al
  4007e8:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  4007eb:	10 8f 02 45 0e 18    	adc    BYTE PTR [rdi+0x180e4502],cl
  4007f1:	8e 03                	mov    es,WORD PTR [rbx]
  4007f3:	45 0e                	rex.RB (bad) 
  4007f5:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
  4007fb:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86701649 <_end+0xffffffff86100bb9>
  400801:	06                   	(bad)  
  400802:	48 0e                	rex.W (bad) 
  400804:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  40080a:	6c                   	ins    BYTE PTR es:[rdi],dx
  40080b:	0e                   	(bad)  
  40080c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  40080f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  400812:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  400815:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  400818:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  40081b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  40081e:	08 00                	or     BYTE PTR [rax],al
  400820:	14 00                	adc    al,0x0
  400822:	00 00                	add    BYTE PTR [rax],al
  400824:	cc                   	int3   
  400825:	00 00                	add    BYTE PTR [rax],al
  400827:	00 98 fe ff ff 02    	add    BYTE PTR [rax+0x2fffffe],bl
	...

0000000000400838 <__FRAME_END__>:
  400838:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600840 <__frame_dummy_init_array_entry>:
  600840:	c0 05 40 00 00 00 00 	rol    BYTE PTR [rip+0x40],0x0        # 600887 <_DYNAMIC+0x2f>
	...

Disassembly of section .fini_array:

0000000000600848 <__do_global_dtors_aux_fini_array_entry>:
  600848:	a0                   	.byte 0xa0
  600849:	05 40 00 00 00       	add    eax,0x40
	...

Disassembly of section .jcr:

0000000000600850 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600858 <_DYNAMIC>:
  600858:	01 00                	add    DWORD PTR [rax],eax
  60085a:	00 00                	add    BYTE PTR [rax],al
  60085c:	00 00                	add    BYTE PTR [rax],al
  60085e:	00 00                	add    BYTE PTR [rax],al
  600860:	01 00                	add    DWORD PTR [rax],eax
  600862:	00 00                	add    BYTE PTR [rax],al
  600864:	00 00                	add    BYTE PTR [rax],al
  600866:	00 00                	add    BYTE PTR [rax],al
  600868:	01 00                	add    DWORD PTR [rax],eax
  60086a:	00 00                	add    BYTE PTR [rax],al
  60086c:	00 00                	add    BYTE PTR [rax],al
  60086e:	00 00                	add    BYTE PTR [rax],al
  600870:	65 00 00             	add    BYTE PTR gs:[rax],al
  600873:	00 00                	add    BYTE PTR [rax],al
  600875:	00 00                	add    BYTE PTR [rax],al
  600877:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
  60087a:	00 00                	add    BYTE PTR [rax],al
  60087c:	00 00                	add    BYTE PTR [rax],al
  60087e:	00 00                	add    BYTE PTR [rax],al
  600880:	80 04 40 00          	add    BYTE PTR [rax+rax*2],0x0
  600884:	00 00                	add    BYTE PTR [rax],al
  600886:	00 00                	add    BYTE PTR [rax],al
  600888:	0d 00 00 00 00       	or     eax,0x0
  60088d:	00 00                	add    BYTE PTR [rax],al
  60088f:	00 c4                	add    ah,al
  600891:	06                   	(bad)  
  600892:	40 00 00             	add    BYTE PTR [rax],al
  600895:	00 00                	add    BYTE PTR [rax],al
  600897:	00 19                	add    BYTE PTR [rcx],bl
  600899:	00 00                	add    BYTE PTR [rax],al
  60089b:	00 00                	add    BYTE PTR [rax],al
  60089d:	00 00                	add    BYTE PTR [rax],al
  60089f:	00 40 08             	add    BYTE PTR [rax+0x8],al
  6008a2:	60                   	(bad)  
  6008a3:	00 00                	add    BYTE PTR [rax],al
  6008a5:	00 00                	add    BYTE PTR [rax],al
  6008a7:	00 1b                	add    BYTE PTR [rbx],bl
  6008a9:	00 00                	add    BYTE PTR [rax],al
  6008ab:	00 00                	add    BYTE PTR [rax],al
  6008ad:	00 00                	add    BYTE PTR [rax],al
  6008af:	00 08                	add    BYTE PTR [rax],cl
  6008b1:	00 00                	add    BYTE PTR [rax],al
  6008b3:	00 00                	add    BYTE PTR [rax],al
  6008b5:	00 00                	add    BYTE PTR [rax],al
  6008b7:	00 1a                	add    BYTE PTR [rdx],bl
  6008b9:	00 00                	add    BYTE PTR [rax],al
  6008bb:	00 00                	add    BYTE PTR [rax],al
  6008bd:	00 00                	add    BYTE PTR [rax],al
  6008bf:	00 48 08             	add    BYTE PTR [rax+0x8],cl
  6008c2:	60                   	(bad)  
  6008c3:	00 00                	add    BYTE PTR [rax],al
  6008c5:	00 00                	add    BYTE PTR [rax],al
  6008c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  6008ca:	00 00                	add    BYTE PTR [rax],al
  6008cc:	00 00                	add    BYTE PTR [rax],al
  6008ce:	00 00                	add    BYTE PTR [rax],al
  6008d0:	08 00                	or     BYTE PTR [rax],al
  6008d2:	00 00                	add    BYTE PTR [rax],al
  6008d4:	00 00                	add    BYTE PTR [rax],al
  6008d6:	00 00                	add    BYTE PTR [rax],al
  6008d8:	f5                   	cmc    
  6008d9:	fe                   	(bad)  
  6008da:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  6008dd:	00 00                	add    BYTE PTR [rax],al
  6008df:	00 60 02             	add    BYTE PTR [rax+0x2],ah
  6008e2:	40 00 00             	add    BYTE PTR [rax],al
  6008e5:	00 00                	add    BYTE PTR [rax],al
  6008e7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6008ed <_DYNAMIC+0x95>
  6008ed:	00 00                	add    BYTE PTR [rax],al
  6008ef:	00 40 03             	add    BYTE PTR [rax+0x3],al
  6008f2:	40 00 00             	add    BYTE PTR [rax],al
  6008f5:	00 00                	add    BYTE PTR [rax],al
  6008f7:	00 06                	add    BYTE PTR [rsi],al
  6008f9:	00 00                	add    BYTE PTR [rax],al
  6008fb:	00 00                	add    BYTE PTR [rax],al
  6008fd:	00 00                	add    BYTE PTR [rax],al
  6008ff:	00 80 02 40 00 00    	add    BYTE PTR [rax+0x4002],al
  600905:	00 00                	add    BYTE PTR [rax],al
  600907:	00 0a                	add    BYTE PTR [rdx],cl
  600909:	00 00                	add    BYTE PTR [rax],al
  60090b:	00 00                	add    BYTE PTR [rax],al
  60090d:	00 00                	add    BYTE PTR [rax],al
  60090f:	00 98 00 00 00 00    	add    BYTE PTR [rax+0x0],bl
  600915:	00 00                	add    BYTE PTR [rax],al
  600917:	00 0b                	add    BYTE PTR [rbx],cl
  600919:	00 00                	add    BYTE PTR [rax],al
  60091b:	00 00                	add    BYTE PTR [rax],al
  60091d:	00 00                	add    BYTE PTR [rax],al
  60091f:	00 18                	add    BYTE PTR [rax],bl
  600921:	00 00                	add    BYTE PTR [rax],al
  600923:	00 00                	add    BYTE PTR [rax],al
  600925:	00 00                	add    BYTE PTR [rax],al
  600927:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 60092d <_DYNAMIC+0xd5>
	...
  600935:	00 00                	add    BYTE PTR [rax],al
  600937:	00 03                	add    BYTE PTR [rbx],al
  600939:	00 00                	add    BYTE PTR [rax],al
  60093b:	00 00                	add    BYTE PTR [rax],al
  60093d:	00 00                	add    BYTE PTR [rax],al
  60093f:	00 40 0a             	add    BYTE PTR [rax+0xa],al
  600942:	60                   	(bad)  
  600943:	00 00                	add    BYTE PTR [rax],al
  600945:	00 00                	add    BYTE PTR [rax],al
  600947:	00 02                	add    BYTE PTR [rdx],al
  600949:	00 00                	add    BYTE PTR [rax],al
  60094b:	00 00                	add    BYTE PTR [rax],al
  60094d:	00 00                	add    BYTE PTR [rax],al
  60094f:	00 60 00             	add    BYTE PTR [rax+0x0],ah
  600952:	00 00                	add    BYTE PTR [rax],al
  600954:	00 00                	add    BYTE PTR [rax],al
  600956:	00 00                	add    BYTE PTR [rax],al
  600958:	14 00                	adc    al,0x0
  60095a:	00 00                	add    BYTE PTR [rax],al
  60095c:	00 00                	add    BYTE PTR [rax],al
  60095e:	00 00                	add    BYTE PTR [rax],al
  600960:	07                   	(bad)  
  600961:	00 00                	add    BYTE PTR [rax],al
  600963:	00 00                	add    BYTE PTR [rax],al
  600965:	00 00                	add    BYTE PTR [rax],al
  600967:	00 17                	add    BYTE PTR [rdi],dl
  600969:	00 00                	add    BYTE PTR [rax],al
  60096b:	00 00                	add    BYTE PTR [rax],al
  60096d:	00 00                	add    BYTE PTR [rax],al
  60096f:	00 20                	add    BYTE PTR [rax],ah
  600971:	04 40                	add    al,0x40
  600973:	00 00                	add    BYTE PTR [rax],al
  600975:	00 00                	add    BYTE PTR [rax],al
  600977:	00 07                	add    BYTE PTR [rdi],al
  600979:	00 00                	add    BYTE PTR [rax],al
  60097b:	00 00                	add    BYTE PTR [rax],al
  60097d:	00 00                	add    BYTE PTR [rax],al
  60097f:	00 08                	add    BYTE PTR [rax],cl
  600981:	04 40                	add    al,0x40
  600983:	00 00                	add    BYTE PTR [rax],al
  600985:	00 00                	add    BYTE PTR [rax],al
  600987:	00 08                	add    BYTE PTR [rax],cl
  600989:	00 00                	add    BYTE PTR [rax],al
  60098b:	00 00                	add    BYTE PTR [rax],al
  60098d:	00 00                	add    BYTE PTR [rax],al
  60098f:	00 18                	add    BYTE PTR [rax],bl
  600991:	00 00                	add    BYTE PTR [rax],al
  600993:	00 00                	add    BYTE PTR [rax],al
  600995:	00 00                	add    BYTE PTR [rax],al
  600997:	00 09                	add    BYTE PTR [rcx],cl
  600999:	00 00                	add    BYTE PTR [rax],al
  60099b:	00 00                	add    BYTE PTR [rax],al
  60099d:	00 00                	add    BYTE PTR [rax],al
  60099f:	00 18                	add    BYTE PTR [rax],bl
  6009a1:	00 00                	add    BYTE PTR [rax],al
  6009a3:	00 00                	add    BYTE PTR [rax],al
  6009a5:	00 00                	add    BYTE PTR [rax],al
  6009a7:	00 fe                	add    dh,bh
  6009a9:	ff                   	(bad)  
  6009aa:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  6009ad:	00 00                	add    BYTE PTR [rax],al
  6009af:	00 e8                	add    al,ch
  6009b1:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  6009b4:	00 00                	add    BYTE PTR [rax],al
  6009b6:	00 00                	add    BYTE PTR [rax],al
  6009b8:	ff                   	(bad)  
  6009b9:	ff                   	(bad)  
  6009ba:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  6009bd:	00 00                	add    BYTE PTR [rax],al
  6009bf:	00 01                	add    BYTE PTR [rcx],al
  6009c1:	00 00                	add    BYTE PTR [rax],al
  6009c3:	00 00                	add    BYTE PTR [rax],al
  6009c5:	00 00                	add    BYTE PTR [rax],al
  6009c7:	00 f0                	add    al,dh
  6009c9:	ff                   	(bad)  
  6009ca:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  6009cd:	00 00                	add    BYTE PTR [rax],al
  6009cf:	00 d8                	add    al,bl
  6009d1:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
	...

Disassembly of section .got:

0000000000600a38 <.got>:
	...

Disassembly of section .got.plt:

0000000000600a40 <_GLOBAL_OFFSET_TABLE_>:
  600a40:	58                   	pop    rax
  600a41:	08 60 00             	or     BYTE PTR [rax+0x0],ah
	...
  600a58:	b6 04                	mov    dh,0x4
  600a5a:	40 00 00             	add    BYTE PTR [rax],al
  600a5d:	00 00                	add    BYTE PTR [rax],al
  600a5f:	00 c6                	add    dh,al
  600a61:	04 40                	add    al,0x40
  600a63:	00 00                	add    BYTE PTR [rax],al
  600a65:	00 00                	add    BYTE PTR [rax],al
  600a67:	00 d6                	add    dh,dl
  600a69:	04 40                	add    al,0x40
  600a6b:	00 00                	add    BYTE PTR [rax],al
  600a6d:	00 00                	add    BYTE PTR [rax],al
  600a6f:	00 e6                	add    dh,ah
  600a71:	04 40                	add    al,0x40
  600a73:	00 00                	add    BYTE PTR [rax],al
  600a75:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000600a78 <__data_start>:
	...

0000000000600a80 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000600a88 <completed.6661>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 44 65 62          	sub    BYTE PTR [rbp+riz*2+0x62],al
   9:	69 61 6e 20 34 2e 39 	imul   esp,DWORD PTR [rcx+0x6e],0x392e3420
  10:	2e 32 2d 31 30 29 20 	xor    ch,BYTE PTR cs:[rip+0x20293031]        # 20293048 <_end+0x1fc925b8>
  17:	34 2e                	xor    al,0x2e
  19:	39 2e                	cmp    DWORD PTR [rsi],ebp
  1b:	32 00                	xor    al,BYTE PTR [rax]
  1d:	47                   	rex.RXB
  1e:	43                   	rex.XB
  1f:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
  22:	28 44 65 62          	sub    BYTE PTR [rbp+riz*2+0x62],al
  26:	69 61 6e 20 34 2e 38 	imul   esp,DWORD PTR [rcx+0x6e],0x382e3420
  2d:	2e 34 2d             	cs xor al,0x2d
  30:	31 29                	xor    DWORD PTR [rcx],ebp
  32:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  35:	38 2e                	cmp    BYTE PTR [rsi],ch
  37:	34 00                	xor    al,0x0
